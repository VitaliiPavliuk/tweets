{"version":3,"file":"static/js/868.f4d0cdae.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx","components/hoc/withAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormSt = styled.form`\n  border: 1px solid gray;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { Button } from '@mui/material';\n\nimport { selectContacts } from 'redux/selectors';\nimport { requestAddContact } from 'redux/contacts/contacts.operations';\n\nimport { ContactFormSt } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const nameInputRef = useRef();\n  const phoneInputRef = useRef();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const contact = {\n      name: nameInputRef.current.value,\n      number: phoneInputRef.current.value,\n    };\n\n    if (\n      contacts.some(\n        c => c.name.toLowerCase().trim() === contact.name.toLowerCase().trim()\n      )\n    ) {\n      toast.error(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      await dispatch(requestAddContact(contact)).unwrap();\n      toast.success(`The contact was successfully added to your phonebook!`);\n    } catch (error) {\n      toast.error(`Oops! Something went wrong... ${error}`);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    nameInputRef.current.value = '';\n    phoneInputRef.current.value = '';\n  };\n\n  return (\n    <ContactFormSt onSubmit={handleSubmit}>\n      <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\n      <label>\n        <p>Name</p>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          ref={phoneInputRef}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <Button variant=\"contained\" type=\"submit\">\n        Add contact\n      </Button>\n    </ContactFormSt>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { IconButton, Tooltip } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { selectIsLoggedIn, selectfilteredContacts } from 'redux/selectors';\nimport {\n  requestDeleteContact,\n  requestUserContacts,\n} from 'redux/contacts/contacts.operations';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const filteredContacts = useSelector(selectfilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(requestUserContacts());\n  }, [dispatch, isLoggedIn]);\n\n  const handleDeleteContact = async contacId => {\n    try {\n      await dispatch(requestDeleteContact(contacId)).unwrap();\n      toast.success(`The contact was successfully deleted!`);\n    } catch (error) {\n      toast.error(`Oops! Something went wrong... ${error}`);\n    }\n  };\n\n  return (\n    <>\n      {filteredContacts.length !== 0 && (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <List dense sx={{ width: '100%', maxWidth: 480 }}>\n            {filteredContacts.map(contact => {\n              return (\n                <ListItem key={contact.id}>\n                  <ListItemText\n                    divider=\"true\"\n                    primary={`${contact.name}: ${contact.number}`}\n                  />\n\n                  <Tooltip title=\"Delete\">\n                    <IconButton onClick={() => handleDeleteContact(contact.id)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onChange={e => {\n          dispatch(setFilter(e.target.value.toLowerCase().trim()));\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectContactsStatus } from '../redux/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { withAuthRedirect } from 'components/hoc/withAuthRedirect';\nimport { ContactsList } from 'components/ContactList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nfunction ContactsPage() {\n  const status = useSelector(selectContactsStatus);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <ContactForm />\n\n      <Filter />\n\n      {status === 'pending' && <Loader />}\n\n      <ContactsList />\n    </div>\n  );\n}\n\nexport default withAuthRedirect(ContactsPage, '/login');\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn, selectUserStatus } from 'redux/selectors';\n\nexport const withAuthRedirect = (Component, redirectTo) => {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const userStatus = useSelector(selectUserStatus);\n\n    return isLoggedIn && userStatus !== 'pending' ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={redirectTo} />\n    );\n  };\n\n  return ComponentWithRedirect;\n};\n"],"names":["ContactFormSt","styled","ContactForm","dispatch","useDispatch","nameInputRef","useRef","phoneInputRef","contacts","useSelector","selectContacts","handleSubmit","event","preventDefault","contact","name","current","value","number","some","c","toLowerCase","trim","toast","requestAddContact","unwrap","reset","onSubmit","style","textAlign","ref","type","pattern","title","required","Button","variant","ContactsList","isLoggedIn","selectIsLoggedIn","filteredContacts","selectfilteredContacts","useEffect","requestUserContacts","handleDeleteContact","contacId","requestDeleteContact","length","display","flexDirection","alignItems","List","dense","sx","width","maxWidth","map","ListItem","ListItemText","divider","primary","Tooltip","IconButton","onClick","id","Delete","Filter","onChange","e","setFilter","target","Component","redirectTo","status","selectContactsStatus","Loader","props","userStatus","selectUserStatus","to"],"sourceRoot":""}